#include "zcommon.acs"

script "MachinegunCounter" (int pos)
{
	// font initialization
	SetFont("MECHNUMS");
	SetHudSize(320,200,1);
	
	// determine base display height (varies according to statusbar)
	
	int baseheight = 158.1; // fullscreen
	if(GetCVar("screenblocks") == 10)
		baseheight = 142.1; // status bar
	else if (GetCVar("screenblocks") < 10)
		terminate;
	
	// position -- 1: idle, 2: recoil, 0: off
	switch(pos)
	{
	case 1:
		HudMessage(i:CheckInventory("Clip"); 0 , 888, CR_UNTRANSLATED, 167.2 ,baseheight      , 0);
		break;
	case 2:
		HudMessage(i:CheckInventory("Clip"); 0 , 888, CR_UNTRANSLATED, 167.2 ,baseheight + 2.0, 0);
		break;
	case 0:
		HudMessage(s:""; 0, 888, 0, 0, 0, 0);
	}
}

script "SplitMissile" (void)
{
	// Store a TID reference to the newly-fired missile
	int missileTID = UniqueTID(0,0);
	Thing_ChangeTID(0, missileTID);
	
	// Switch the activator to the player to check player input.
	SetActivator(missileTID, AAPTR_TARGET);
		
	// While the missile is alive, check for player to hit Altfire.
	while(ThingCount(0, missileTID) > 0)
	{
		int buttons = GetPlayerInput(-1, INPUT_BUTTONS);
		int oldbuttons = GetPlayerInput(-1, INPUT_OLDBUTTONS);
		if(buttons & BT_ALTATTACK && !(oldbuttons & BT_ALTATTACK))
		{
			// If altfire is pressed, split the missile and break out of the script.
			SetActorState(missileTID, "Split", 1);
			Thing_ChangeTID(missileTID, 0);
			break;
		}
		delay(1);
	}
}