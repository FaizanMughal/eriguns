/*
 * eriguns2: hellforge
 * (c) xaser 2017
 * sprites (c) Amuscaria
 */

class EriHellforge : HellWeapon
{
	Default
	{
		Scale 0.8;
		Weapon.SelectionOrder 2500;
		Weapon.AmmoUse 2;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "BloodAmmo";
		Weapon.SisterWeapon "EriHellforgePowered";
		Inventory.PickupMessage "$GOTHELLFORGE";
		Tag "$TAG_HELLFORGE";
		+WEAPON.NOAUTOFIRE;
	}
	States
	{
	Ready:
		HELG BBBCCCAAA 1 A_WeaponReady();
		Loop;
	Deselect:
		HELG A 1 A_Lower();
		Loop;
	Select:
		HELG A 1 A_Raise();
		Loop;
	Fire:
		HELF A 3 Bright X_HellforgeFlash();
		HELF B 3 Bright X_FireHellforge();
	AfterFire:
		HELF CD 3 Bright;
		HELF E 3;
		HELG CABC 3;
		HELG A 0 A_Refire();
		Goto Ready;
	Flash:
		TNT1 A 3 Bright A_Light(1);
		TNT1 A 3 Bright A_Light(2);
		TNT1 A 3 Bright A_Light(3);
		TNT1 A 3 Bright A_Light(1);
		Goto LightDone;
	Spawn:
		HEEL A -1;
		Stop;
	}

	action void X_HellforgeFlash()
	{
		A_PlaySound("weapons/hellforgefly", CHAN_AUTO);
		A_GunFlash();
	}

	action void X_FireHellforge(class<Actor> puffClass = "HellforgeBoom", float recoil = 5.0)
	{
		A_Recoil(recoil);
		A_PlaySound("weapons/hellforgefire", CHAN_WEAPON);
		A_RailAttack(0, useammo: false, flags: RGF_SILENT | RGF_NOPIERCING, pufftype: null, sparsity: 16, spawnclass: "HellforgeTrail");
		A_FireBullets(0, 0, 1, 0, puffClass, 1, 0);
	}
}

class EriHellforgePowered : EriHellforge
{
	Default
	{
		Weapon.SisterWeapon "EriHellforge";
		+WEAPON.POWERED_UP;
	}
	States
	{
	Fire:
		HELF A 3 Bright X_HellforgeFlash();
		HELF B 3 Bright X_FireHellforge("HellforgeNuke", 8.0);
		Goto AfterFire;
	}
}

class EriHellforgeBolt : EriHellforge
{
	Default
	{
		Weapon.AmmoUse 1;
		Weapon.AmmoType "BoltAmmo";
		Weapon.SisterWeapon "EriHellforgeBoltPowered";
	}
}

class EriHellforgeBoltPowered : EriHellforgePowered
{
	Default
	{
		Weapon.AmmoUse 1;
		Weapon.AmmoType "BoltAmmo";
		Weapon.SisterWeapon "EriHellforgeBolt";
		+WEAPON.POWERED_UP;
	}
}

class EriHellforgeMana : EriHellforge
{
	Default
	{
		Weapon.AmmoGive 25;
		Weapon.AmmoUse 5;
		Weapon.AmmoType "Mana2";
		Weapon.SisterWeapon "EriHellforgeManaPowered";
	}
}

class EriHellforgeManaPowered : EriHellforgePowered
{
	Default
	{
		Weapon.AmmoUse 5;
		Weapon.AmmoType "Mana2";
		Weapon.SisterWeapon "EriHellforgeMana";
		+WEAPON.POWERED_UP;
	}
}

class HellforgeBoom : EriPuff
{
	Default
	{
		Decal "Scorch";
		RenderStyle "Add";
		Alpha 1.0;
		Scale 0.5;
		Obituary "$OB_MPHELLFORGE";
		DamageType "Explosive";
		+FORCERADIUSDMG;
	}
	States
	{
	Spawn:
		GEXP A 2 Bright;
		GEXP A 3 Bright X_HellforgeExplode();
		GEXP BCDEFGHIJ 3 Bright;
		Stop;
	}

	void X_HellforgeExplode(int damage = 150, int radius = 128, bool blast = true)
	{
		A_SetScale(1.0, 1.0);
		A_PlaySound("weapons/hellforgeexplode", CHAN_AUTO);
		A_PlaySound("weapons/hellforgehit"    , CHAN_AUTO);
		A_Explode(damage, radius, XF_HURTSOURCE);
		if(blast) {
			A_Blast(BF_NOIMPACTDAMAGE, 255, radius, 20, "Nothing", "");
		}
	}
}

class HellforgeTrail : EriTrail
{
	const DISPERSION_SPEED = 0.25;

	Default
	{
		RenderStyle "Translucent";
		Scale 0.33;
		Alpha 0.33;
	}
	States
	{	
	Spawn:
		BSMK ABCDEFG 2;
		Stop;
	}

	override void PostBeginPlay()
	{
		self.angle = self.AngleTo(self.target);
		Vector2 dispersion = (frandom(-1, 1), frandom(-1, 1)).Unit() * DISPERSION_SPEED;
		Vector2 velVec = RotateVector((0, dispersion.x), self.angle);
		self.vel.x = velVec.x;
		self.vel.y = velVec.y;
		self.vel.z = dispersion.y;
	}
}

class HellforgeNuke : HellforgeBoom
{
	const fragCount = 10;

	Default
	{
		Obituary "$OB_MPHELLFORGEPOW";
		RenderStyle "Translucent";
		Alpha 0.8;
		Scale 0.75;
	}
	States
	{
	Spawn:
		GEXP A 2 Bright;
		GEXP A 3 Bright X_HellforgeNuke();
		GEXP BCDE 3 Bright;
		GEXP FGHIJ 3 Bright A_FadeOut(0.1);
		Stop;
	}
	
	void X_HellforgeNuke()
	{
		X_HellforgeExplode(160, 160, false);
		for(int i = 0; i < fragCount; i++) {
			A_SpawnItemEx("HellforgeFrag", 0, 0, frandom(14, 18), frandom(4, 6), 0, frandom(8, 12), frandom(0, 360), SXF_TRANSFERPOINTERS);
		}
	}
}

class HellforgeFrag : Actor
{
	Default
	{
		Radius 2;
		Height 4;
		Projectile;
		Damage 20;
		DeathSound "weapons/hellforgeball";
		RenderStyle "Translucent";
		DamageType "Explosive";
		Alpha 0.8;
		Scale 0.33;
		Gravity 0.85;
		-NOGRAVITY;
		+BOUNCEONCEILINGS;
		+BOUNCEONWALLS;
		+FORCERADIUSDMG;
	}
	States
	{
	Spawn:
		HBAL A 0 NoDelay {
			A_PlaySound("weapons/hellforgeburn", CHAN_VOICE, 1.0, true);
			return A_Jump(256, random(1, 16));
		}
	Fly:
		HBAL AABBCCDDEEFFGGHH 1 Bright X_HellforgeFragTrail();
		Loop;
	Death:
		HBXP A 2 Bright X_HellforgeFragHit();
		HBXP B 3 Bright X_HellforgeFragExplode();
		HBXP CDEFGHIJ 2 Bright;
		Stop;
	}

	override bool CanCollideWith(Actor other, bool passive)
	{
		// only collide with actors when moving downwards. This gives the
		// fragments a chance to spread a bit instead of insta-sploding on
		// the first thing they hit. Ceiling-ricochet shots are devastating.
		return (self.vel.z < 0) ? Super.CanCollideWith(other, passive) : false;
	}

	void X_HellforgeFragTrail()
	{
		bool ok;
		Actor newTrail;
		[ok, newTrail] = A_SpawnItemEx("HellforgeFragTrail", flags: SXF_NOCHECKPOSITION);
		if(ok) {
			newTrail.frame = self.frame;
		}
	}

	void X_HellforgeFragHit()
	{
		A_SetScale(1.0, 1.0);
		A_NoGravity();
	}

	void X_HellforgeFragExplode(int damage = 64, float radius = 64, float fullradius = 48)
	{
		A_Explode(damage, radius, false, false, fullradius);
		A_Blast(BF_NOIMPACTDAMAGE, damage, radius, 10, "Nothing", "");
	}
}

class HellforgeFragTrail : EriTrail
{
	Default
	{
		RenderStyle "Translucent";
		Scale 0.33;
		Alpha 0.6;
	}
	States
	{	
	Spawn:
		HBAL A 1 Bright A_FadeOut(0.05);
		Loop;
	}
}
