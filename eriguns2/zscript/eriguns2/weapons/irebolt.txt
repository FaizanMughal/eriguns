/*
 * eriguns2: irebolt
 * (c) xaser 2017
 * sprites (c) Amuscaria
 */

class EriIrebolt : HellWeapon
{
	Default
	{
		Scale 0.8;
		Weapon.SelectionOrder 2500;
		Weapon.AmmoUse 2;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "BloodAmmo";
		Weapon.SisterWeapon "EriIreboltPowered";
		Inventory.PickupMessage "$GOTIREBOLT";
		Tag "$TAG_IREBOLT";
		+WEAPON.NOAUTOFIRE;
		+WEAPON.AMMO_OPTIONAL;
	}
	States
	{
	Ready:
		HIRG BBBCCCDDDEEEFFFGGG 1 A_WeaponReady();
		Loop;
	Deselect:
		HIRG A 1 A_Lower();
		Loop;
	Select:
		HIRG A 1 A_Raise();
		Loop;
	Fire:
		HIRF A 3 Bright X_IreboltFlash();
		HIRF B 3 Bright X_FireIrebolt();
		HIRF CD 3 Bright;
		HIRF E 3;
	Nope:
		HIRG EFG 3;
		HIRG A 0 A_Refire();
		Goto Ready;
	AltFire:
		HIRG A 1 Bright X_DetonateBolts();
		Goto Ready;
	Flash:
		TNT1 A 3 Bright A_Light(1);
		TNT1 A 3 Bright A_Light(2);
		TNT1 A 3 Bright A_Light(3);
		TNT1 A 3 Bright A_Light(1);
		Goto LightDone;
	Spawn:
		HEIR A -1;
		Stop;
	}

	action state X_IreboltFlash()
	{
		// abort early if we're out of ammo.
		if(invoker.Ammo1 && invoker.Ammo1.amount == 0) {
			return ResolveState("Nope");
		}
		A_GunFlash();
		return null;
	}

	action void X_FireIrebolt()
	{
		A_Recoil(5.0);
		A_PlaySound("weapons/ireboltfire", CHAN_WEAPON);
		A_FireProjectile("IreboltShot");
	}

	action void X_DetonateBolts()
	{
		// iterate through each bolt that belongs to the player and nuke it.
		ThinkerIterator boltIterator = ThinkerIterator.Create("IreboltShot");
		IreboltShot bolt;
		while(bolt = IreboltShot(boltIterator.Next() ) ) {
			if(bolt.master == self) {
				bolt.X_BoltDetonate();
			}
		}
	}
}

class EriIreboltPowered : EriIrebolt
{
	Default
	{
		Weapon.SisterWeapon "EriIrebolt";
		+WEAPON.POWERED_UP;
	}
	States
	{
	Fire:
		HIRF A 3 Bright X_IreboltFlash();
		HIRF B 3 Bright X_FireIreboltPow();
		HIRF CD 3 Bright;
		HIRF E 3;
		HIRG A 0 A_Refire();
		Goto Ready;
	}

	action void X_FireIreboltPow(int amount = 3)
	{
		A_Recoil(2.0);
		A_PlaySound("weapons/ireboltfire", CHAN_AUTO);
		X_FireProjectileSpread("IreboltMine", amount, (-3.5, 3.5), 1, 0, 0, 1, (-5, 0));
	}
}

class EriIreboltBolt : EriIrebolt
{
	Default
	{
		Weapon.AmmoUse 1;
		Weapon.AmmoType "BoltAmmo";
		Weapon.SisterWeapon "EriIreboltBoltPowered";
	}
}

class EriIreboltBoltPowered : EriIreboltPowered
{
	Default
	{
		Weapon.AmmoUse 1;
		Weapon.AmmoType "BoltAmmo";
		Weapon.SisterWeapon "EriIreboltBolt";
		+WEAPON.POWERED_UP;
	}
}

class EriIreboltMana : EriIrebolt
{
	Default
	{
		Weapon.AmmoGive 25;
		Weapon.AmmoUse 5;
		Weapon.AmmoType "Mana2";
		Weapon.SisterWeapon "EriIreboltManaPowered";
	}
}

class EriIreboltManaPowered : EriIreboltPowered
{
	Default
	{
		Weapon.AmmoUse 5;
		Weapon.AmmoType "Mana2";
		Weapon.SisterWeapon "EriIreboltMana";
		+WEAPON.POWERED_UP;
	}
}

class EriIreboltOrHellforgeSpawner : CvarToggleSpawner replaces SuperShotgun
{
	Default
	{
		CvarToggleSpawner.Cvar "eri_altslot6";
		CvarToggleSpawner.OffClass "EriIrebolt";
		CvarToggleSpawner.OnClass "EriHellforge";
	}
}

class EriIreboltOrHellforgeSpawnerHeretic : CvarToggleSpawner replaces PhoenixRod
{
	Default
	{
		CvarToggleSpawner.Cvar "eri_altslot6";
		CvarToggleSpawner.OffClass "EriIreboltBolt";
		CvarToggleSpawner.OnClass "EriHellforgeBolt";
	}
}

class EriIreboltOrHellforgeSpawnerHexen : CvarToggleSpawner replaces FWeapHammer
{
	Default
	{
		CvarToggleSpawner.Cvar "eri_altslot6";
		CvarToggleSpawner.OffClass "EriIreboltMana";
		CvarToggleSpawner.OnClass "EriHellforgeMana";
	}
}

class EriIreboltOrHellforgeSpawnerStrife : EriIreboltOrHellforgeSpawnerHeretic replaces StrifeGrenadeLauncher {}

class IreboltShot : EriStickyMissile
{
	bool isDetonated;

	Default
	{
		Radius 4;
		Height 8;
		Speed 50;
		DamageFunction (1);
		DamageType "Explosive";
		Obituary "$OB_MPIREBOLT";
		Decal "BulletChip";
		EriStickyMissile.StickFactor 0.5;
		+FORCERADIUSDMG;
	}
	States
	{
	Spawn:
		ISPK A 0 NoDelay X_BoltHum();
		ISPK A 1 Bright X_BoltTrail();
		Wait;
	Death:
		ISPK B 0 Bright X_BoltStick();
		ISPK # 1 Bright X_BoltStuck();
		Wait;
	Boom:
		HEXP A 3 Bright X_BoltExplode();
		HEXP BCDEFG 3 Bright;
		Stop;
	}

	void X_BoltHum()
	{
		A_PlaySound("weapons/irebolthum", CHAN_BODY, 0.35, 1, ATTN_NORM);
	}

	void X_BoltTrail(Vector3 trailOfs = ( -12, 0, -2), Vector3 trailVel = (-2, 0, 0))
	{
		A_SpawnItemEx("IreboltTrail", trailOfs.x, trailOfs.y, trailOfs.z, trailVel.x, trailVel.y, trailVel.z);
	}

	void X_BoltStick()
	{
		A_Stop();
		A_PlaySound(self.tracer ? "weapons/ireboltspike" : "weapons/ireboltwall", CHAN_BODY);
		self.bNoGravity = true;

		// register the target (the player who fired the bolt) as the master,
		// thus making it visible to the remote-detonate altfire.
		// this is done post-stick so one can't detonate bolts in flight.
		self.master = self.target;
	}

	state X_BoltStuck(bool resetFrame = true, float trailOffset = -12)
	{
		if(self.tracer) {
			if(self.tracer.health > 0) {
				// stick to the tracer and spawn a cool trail.
				X_StickyWarp();
				X_BoltTrail((trailOffset, 0, -2), (frandom(-1, 0), frandom(-0.25, 0.25), 3));

			} else {
				// if we have a dead tracer, fall to the ground.
				self.bNoGravity = false;
				self.gravity = 1;
				if(resetFrame) {
					self.frame = 0;
				}
			}
		}

		// if the player who fired the missile is dead, auto-detonate.
		if(!self.master || self.master.health <= 0) {
			return ResolveState("Boom");
		}
		return null;
	}

	void X_BoltDetonate()
	{
		if(!self.isDetonated) {
			self.isDetonated = true;
			self.SetState(self.FindState("Boom"));
		}
	}

	void X_BoltExplode(int damage = 150, int radius = 128)
	{
		A_SetTranslucent(1.0,1);
		A_PlaySound("weapons/ireboltfly", CHAN_AUTO);
	    A_PlaySound("weapons/ireboltdetonate", CHAN_AUTO);
		A_Explode(damage, radius, XF_HURTSOURCE);
	}
}

class IreboltMine : IreboltShot
{
	Default
	{
		EriStickyMissile.StickFactor 0.75;
		Obituary "$OB_MPIREBOLTPOW";
		Gravity 0.5;
		-NOGRAVITY;
	}
	States
	{
	Spawn:
		IBOM A 0 Bright NoDelay A_Jump(128, 2);
	Fly:
		IBOM AB 4 Bright;
		Loop;
	Death:
		IBOM # 0 Bright X_BoltStick();
		IBOM # 1 Bright X_BoltStuck(false, -0.01);
		Wait;
	Boom:
		HEXP A 3 Bright X_BoltExplode(100, 128);
		HEXP BCDEFG 3 Bright;
		Stop;
	}
}

class IreboltTrail : EriTrail
{
	Default
	{
		RenderStyle "Add";
		Alpha 0.5;
		Scale 0.33;
	}
	States
	{
	Spawn:
		MTRL HABCDEFG 2 Bright;
		Stop;
	}
}
