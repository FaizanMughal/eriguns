/*
 * eriguns2: templar baller knight sword
 * (c) xaser 2017
 * sprites (c) Amuscaria
 */

class EriSword : HellWeapon replaces Fist
{
	Default
	{
		Weapon.SelectionOrder 3700;
		Weapon.Kickback 100;
		Weapon.SisterWeapon "EriSwordPowered";
		Obituary "$OB_MPSWORD";
		Tag "$TAG_SWORD";
		+WEAPON.WIMPY_WEAPON;
		+WEAPON.MELEEWEAPON;
		+WEAPON.NOALERT;
	}
	States
	{
	Ready:
		HTSG A 1 A_WeaponReady();
		Loop;
	Deselect:
		HTSG A 1 A_Lower();
		Loop;
	Select:
		HTSG A 1 A_Raise();
		Loop;
	Fire:
		HTSG A 1 A_WeaponOffset(16, 48);
		HTSG A 1 A_WeaponOffset(32, 64);
		HTSG A 1 A_WeaponOffset(48, 80);
		HTSG A 0 A_WeaponOffset( 0, 32);
	Hold:
		HTSG B 2 X_SwordSwing  (48,  0);
		HTSG B 2 A_WeaponOffset( 0, 48);
		HTSG C 2 X_SwordHit    ( 0, 32);
		HTSG D 2;
		HTSG E 2;
		HTSG E 2 A_WeaponOffset(-16, 80);
		TNT1 A 5 A_WeaponOffset(  0, 32);
		TNT1 A 5 A_ReFire();
	RaiseUp:
		HTSG A 1 A_WeaponOffset(10, 72);
		HTSG A 1 A_WeaponOffset( 8, 64);
		HTSG A 1 A_WeaponOffset( 6, 56);
		HTSG A 1 A_WeaponOffset( 4, 48);
		HTSG A 1 A_WeaponOffset( 2, 40);
		Goto Ready;
	Spawn:
		HETZ A -1;
		Stop;
	}

	action void X_SwordSwing(double offsetX, double offsetY)
	{
		A_WeaponOffset(offsetX, offsetY);
		A_PlaySound("weapons/swordswing", CHAN_AUTO);
	}

	action void X_SwordHit(double offsetX, double offsetY)
	{
		A_WeaponOffset(offsetX, offsetY);
		int baseDamage = FindInventory("PowerStrength") ? 20 : 4;
		A_CustomPunch(baseDamage * random(1, 10), 1, 0, "SwordPuff", 96);
	}
}

class EriSwordPowered : EriSword
{
	Default
	{
		Weapon.SisterWeapon "EriSword";

		+WEAPON.POWERED_UP;
	}
	States
	{
	Ready:
		HTSP AAABBBCCCDDDEEEDDDCCCBBB 1 A_WeaponReady();
		Loop;
	Deselect:
		HTSP # 1 A_Lower();
		Loop;
	Select:
		HTSP A 1 A_Raise();
		Loop;
	Fire:
		HTSP # 1 A_WeaponOffset(16, 48);
		HTSP # 1 A_WeaponOffset(32, 64);
		HTSP # 1 A_WeaponOffset(48, 80);
		HTSP # 0 A_WeaponOffset( 0, 32);
	Hold:
		HTSP F 2 X_SwordSwing  (48,  0);
		HTSP F 2 A_WeaponOffset( 0, 48);
		HTSP G 2 X_SwordPowHit ( 0, 32);
		HTSP H 2;
		HTSP I 2;
		HTSP I 2 A_WeaponOffset(-16, 80);
		TNT1 A 5 A_WeaponOffset(  0, 32);
		TNT1 A 5 A_ReFire();
	RaiseUp:
		HTSP A 1 A_WeaponOffset(10, 72);
		HTSP A 1 A_WeaponOffset( 8, 64);
		HTSP A 1 A_WeaponOffset( 6, 56);
		HTSP A 1 A_WeaponOffset( 4, 48);
		HTSP A 1 A_WeaponOffset( 2, 40);
		Goto Ready;
	}

	action void X_SwordPowHit(double offsetX, double offsetY)
	{
		A_WeaponOffset(offsetX, offsetY);
		A_CustomPunch(20               , 1, 0, "SwordPowPuff", 96, 1.0);
		A_CustomPunch(20 * random(1, 9), 1, 0, "SwordPuff"   , 96);
	}
}

class SwordPuff : BulletPuff
{
	Default
	{
		+PUFFGETSOWNER;
		+PUFFONACTORS;
		AttackSound "weapons/swordclunk";
		SeeSound "weapons/swordsplat";
	}
	States
	{
	Spawn:
	Melee:
		Goto Super::Melee;
	XDeath:
		TNT1 A 0;
		TNT1 A 1 A_AlertMonsters();
		Stop;
	}
}

class SwordPowPuff : BulletPuff
{
	Default
	{
		+PUFFGETSOWNER;
		+PUFFONACTORS;
		DamageType "Drain";
	}
	States
	{
	Spawn:
	Melee:
		TNT1 A 1;
		Stop;
	XDeath:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("weapons/swordpower", CHAN_AUTO);
		TNT1 A 1 A_AlertMonsters();
		Stop;
	}
}

